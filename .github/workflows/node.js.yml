name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  backend-tests:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend/

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './backend/package-lock.json'
    - name: Install dependencies
      run: npm ci
    - name: Build the source code
      run: npm run build --if-present
    - name: Run tests
      run: npm test
      env:
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}
          MONGO_URI: ${{ secrets.MONGO_URI }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          PORT: ${{ secrets.PORT }}

  frontend-tests:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./frontend/

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'
    - name: Install dependencies
      run: npm ci
    - name: Build the source code
      run: npm run build --if-present
    - name: Run tests
      run: npm test
      env:
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_PUBLIC_KEY}}

